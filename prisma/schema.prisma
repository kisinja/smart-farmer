generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  price       Float
  imageUrl    String
  stock       Int    @default(0)
  views       Int    @default(0)

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String   @db.ObjectId

  ownerId String

  cartItems CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orderItems OrderItem[]
}

model Category {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  imageUrl    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[]
}

model Order {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  buyerId       String
  sellerId       String
  orderItems    OrderItem[]
  shippingInfo  ShippingInfo @relation(fields: [shippingInfoId], references: [id])
  shippingInfoId String      @db.ObjectId 
  paymentMethod String
  paymentReference String?
  totalAmount   Float
  status        String       @default("PENDING") // PENDING, SHIPPED, DELIVERED, CANCELLED
  trackingNumber String?
  createdAt     DateTime     @default(now())
}

model OrderItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String   @db.ObjectId

  product   Product  @relation(fields: [productId], references: [id])
  productId String   @db.ObjectId

  quantity  Int      @default(1)
}

model ShippingInfo {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  fullName  String
  address   String
  city      String
  country   String
  email     String
  phone     String

  orders Order[]
}

model Cart {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  userId    String

  cartItems CartItem[]

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model CartItem {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  cart      Cart      @relation(fields: [cartId], references: [id])
  cartId    String    @db.ObjectId

  product   Product   @relation(fields: [productId], references: [id])
  productId String    @db.ObjectId

  quantity  Int       @default(1)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
